@using System.Configuration
@using SpeCalcDataAccessLayer
@using System.Web.Script.Serialization
@using SpeCalc.Helpers
@using SpeCalcDataAccessLayer
@using SpeCalcDataAccessLayer.Models
@model SpeCalcDataAccessLayer.Models.TenderClaim

@{
    ViewBag.Title = "Карточка заявки";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var serializer = new JavaScriptSerializer();
    var managers = (List<Manager>)ViewBag.Managers;
    var dealTypes = (List<DealType>)ViewBag.DealTypes;

    var claimStatus = (List<ClaimStatus>)ViewBag.ClaimStatus;
    var productManagers = (List<ProductManager>)ViewBag.ProductManagers;
    var claim = (TenderClaim)ViewBag.Claim;
    var history = (List<ClaimStatusHistory>)ViewBag.StatusHistory;
    var facts = (List<ProtectFact>)ViewBag.Facts;
    var deliveryTimes = (List<DeliveryTime>)ViewBag.DeliveryTimes;
    var editableposIds = (List<int>)ViewBag.EditablePositions;
}

<div>
    <div class="panel panel-default">
        <div class="panel-heading" style="min-height: 70px;">
            <div class="h4 marg-sm">
                <div id="headWithCalc" class="pull-left">
                    Заявка №@Model.Id @Model.Customer<br />
                    <span>
                        Бюджет @Model.StrSum
                    </span>
                </div>
                <div class="pull-left" style="padding-left: 10px">
                    @if (Model.StateCanAddPositions)
                    {
                        <button type="button" id="butSetClaimOnWork" style="" class="btn btn-success btn-sm" href=""><i class="fa fa-mail-forward"></i> в работу</button>
                    }
                    else
                    {
                        <button id="butСlaimStatusContined" type="button" class="btn btn-success btn-sm"><i class="fa fa-play"></i> возобновить</button>
                        <button id="butСlaimStatusStopped" type="button" class="btn btn-warning btn-sm"><i class="fa fa-pause"></i> приостановить</button>
                        <button id="butСlaimStatusCanceled" type="button" class="btn btn-danger btn-sm"><i class="fa fa-stop"></i> отменить</button>
                    }
                </div>
                <span class="alert-info marg-sm pull-right">
                    @Model.ClaimTypeName
                </span>
            </div>
        </div>
        <div class="panel-body">
            @*info col 1*@
            <div type="pnlClaimFormWithCalc" class="col-sm-4">
                <table class="table table-condensed pad-xs">
                    <tr>
                        <td class="text-right">Тип сделки</td>
                        <td><strong id="claimDealType">@Model.DealTypeName</strong></td>
                    </tr>
                    <tr>
                        <td class="text-right">Дата начала</td>
                        <td><strong id="claimTenderStart">@Model.TenderStartString</strong></td>
                    </tr>
                    <tr>
                        <td class="text-right">Срок сдачи</td>
                        <td><strong id="claimDeadline">@Model.ClaimDeadlineString</strong></td>
                    </tr>
                    <tr>
                        <td class="text-right">Срок подачи КП</td>
                        <td><strong id="kPDeadline">@Model.KPDeadlineString</strong></td>
                    </tr>
                    <tr>
                        <td class="text-right">Менеджер</td>
                        <td><strong id="claimManager">@Model.Manager.ShortName</strong></td>
                    </tr>
                    <tr>
                        <td class="text-right"><span>Подразделение</span></td>
                        <td><span id="managerSubDivision">@Model.Manager.SubDivision</span></td>
                    </tr>
                    <tr>
                        <td class="text-right"><span>Руководитель</span></td>
                        <td><span id="managerChief">@Model.Manager.ChiefShortName</span></td>
                    </tr>
                    <tr>
                        <td class="text-right">Файлы заявки</td>
                        <td>
                            <div id="claimFileList">
                                @foreach (var file in Model.Files)
                                {
                                    <div>
                                        <a href="@Url.Action("GetTenderClaimFile", "Calc")?guid=@file.FileGuid" target="_blank">@file.FileName</a>
                                    </div>
                                }
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td class="text-right"></td>
                        <td>
                            @using (Html.BeginForm("SaveFile", "Claim", new { claimId = Request.QueryString["claimId"], cv = Request.QueryString["cv"] }, FormMethod.Post, new { enctype = "multipart/form-data" }))
                            {
                                <div class="pull-left">
                                    <input type="file" name="file" multiple="multiple" accept="@ConfigurationManager.AppSettings["FileFormat4TenderClaimFile"]" />
                                    <input type="text" class="hidden" name="formClaimId" id="formClaimId" />
                                </div><div class="pull-left">
                                    <button class="btn btn-success btn-xs" type="submit">сохранить файл</button>
                                </div>

                            }
                        </td>
                    </tr>
                    <tr>
                        <td class="text-right">Сертификаты</td>
                        <td>
                            <div id="certList">
                                @foreach (var file in Model.Certs)
                                {
                                    <div>
                                        <a href="@Url.Action("GetCertFile", "Calc")?guid=@file.FileGuid" target="_blank">@file.FileName</a>
                                    </div>
                                }
                            </div>
                        </td>
                    </tr>
                </table>

                <div id="commentPanel">

                    @if (!Model.StateCanAddPositions)
                    {


                        <textarea id="commentWithCalc" rows="3" placeholder="Комментарий" class="form-control"></textarea>
                        <div>
                            @*<button type='button' class='btn btn-danger'><i class="fa fa-remove"></i> отклонить</button>*@
                            @*<button type='button' id="butSendOnConfirm" class='btn btn-success'><i class="fa fa-bullhorn"></i> на подтверждение</button>*@
                            <button type="button" id="butSendCommentWithCalc" class="btn btn-default"><i class="fa fa-comment"></i> сохранить комментарий</button>
                        </div>
                    }
                </div>
            </div>
            @*info col 2*@
            <div type="pnlClaimFormWithCalc" class="col-lg-4">
                <table class="table table-condensed pad-xs">
                    <tr>
                        <td class="text-right">№ конкурса</td>
                        <td><strong id="claimTenderNumber">@Model.TenderNumber</strong></td>
                    </tr>
                    <tr>
                        <td class="text-right">Статус конкурса</td>
                        <td><strong id="claimTenderStatus">@Model.TenderStatusName</strong></td>
                    </tr>
                    <tr>
                        <td class="text-right">Срок поставки</td>
                        <td><strong id="claimDeliveryDate">@Model.DeliveryDateString</strong></td>
                    </tr>
                    <tr>
                        <td class="text-right">Место поставки</td>
                        <td><strong id="claimDeliveryPlace">@Model.DeliveryPlace</strong></td>
                    </tr>
                    <tr>
                        <td class="text-right">Дата аукциона</td>
                        <td><strong id="claimAuctionDate">@Model.AuctionDateString</strong></td>
                    </tr>
                    <tr>
                        <td class="text-right text-nowrap">Ссылка на закупки</td>
                        <td><small id="claimTenderUrl">@Model.TenderUrl</small></td>
                    </tr>
                </table>
            </div>
            @*История*@
            <div class="col-lg-4">
                <h4 class="marg-sm">История изменения статуса</h4>
                <div>
                    <ul class="list-group small" id="claimStatusHistoryContainer"></ul>
                </div>
            </div>
        </div>
    </div>

    <div id="positionPanel" style="margin-left: 4px; margin-right: 4px;">
        @if (Model.StateCanAddPositions)
        {
            <P>
                <blockquote class="bg-warning pad-sm">
                    Каждая номенклатурная позиция должны оформляться отдельной строкой!
                </blockquote>
            </P>
            <p>
                <blockquote class="bg-warning pad-sm">
                    При загрузке спецификации удостоверьтесь, что в ячейках нет формул!
                </blockquote>
            </p>
        }
        <div>
            <div class="pad-sm">
                <ul class="list-inline">
                    @if (Model.StateCanAddPositions)
                    {
                        //using (Html.BeginForm("UploadFileForm", "Claim", FormMethod.Post, new { enctype = "multipart/form-data", id = "uploadExcelForm" }))
                        //{
                        @*<form action="@Url.Action("UploadFileForm", "Claim")" method="post" enctype="multipart/form-data" onsubmit="return handleSubmit(this);">*@

                        <li>
                            @*<a id="butAddPosition" class="btn btn-primary btn-sm"><i class="fa fa-plus-circle"></i> добавить позицию</a>*@
                            <a id="butGetFile" href="@Url.Action("GetSpecificationFile")?claimId=@Model.Id" target="_blank" class="btn btn-default btn-sm"><i class="fa fa-download"></i> скачать шаблон</a>
                        </li>
                        @*<li>
                    <button id="butUploadFile" type="submit" class="btn btn-default btn-sm"><i class="fa fa-upload"></i> загрузить спецификацию</button>
                </li>*@
                        <li>
                            @Html.HiddenFor(m => m.Id)
                            <div class="fileUpload btn btn-default btn-sm">
                                <span><i class="fa fa-upload"></i> загрузить спецификацию</span>
                                <input type="file" name="file" id="txtUploadFile" class="upload" accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" />
                            </div>
                        </li>


                        @*<button id="butUploadFile" type="button" class="btn btn-default btn-sm"><i class="fa fa-upload"></i> загрузить спецификацию</button>
                <iframe id="uploadFile" src="@Url.Action("UploadFileForm")" style="display: none"></iframe>*@
                        @*</form>*@
                        //}
                    }
                    @if (Model.StateManagerPositionWork)
                    {
                        
                            <li>
                                <button id="butSetPositionReject" type="button" class="btn btn-danger btn-sm"><i class="fa fa-close"></i> отклонить отмеченные</button>
                            </li>
                            <li>
                                <button id="butSetPositionConfirm" type="button" class="btn btn-success btn-sm"><i class="fa fa-check"></i> принять все</button>
                            </li>
                            <li>
                                <button id="butSetPositionOnWork" type="button" class="btn btn-success btn-sm"><i class="fa fa-mail-forward"></i> В работу отмеченные</button>
                            </li>
                        
                    }
                    @if (!Model.StateCanAddPositions)
                    {
                        <li>
                            <button id="butGetCalculateOnlyCalculateFile" type="button" class="btn btn-default btn-sm"><i class="fa fa-download"></i> скачать расчет</button>
                        </li>
                    }
                    @if (DateTime.Now > new DateTime(2015, 10, 2) && Model.StateIsEnd)
                    {
                            <li>
                                <button id="goACtual" class="btn btn-success btn-sm"><i class="fa fa-mail-forward"></i> Актуализировать отмеченные</button>
                            </li>
                    }
                    @if (DateTime.Now > new DateTime(2015, 10, 2) && Model.StateIsActive)
                    {
                            <li>
                                <button id="askReject" class="btn btn-danger btn-sm"><i class="fa fa-mail-reply"></i> Запросить отклонение для отмеченных</button>
                            </li>
                    }
                    @if (Model.StateManagerPositionWork || Model.StateCanAddPositions)
                    {
                            <li>
                                <button id="butDeleteSelected" type="button" class="btn btn-danger btn-sm"><i class="fa fa-trash"></i> удалить отмеченные</button>
                            </li>
                    }
                </ul>
            </div>

            @*@if (Model != null && Model.Id > 0)
                {
                    int[] versions = DbEngine.GetCalcVersionList(Model.Id);

                    <div class="pad-sm">
                        <ul class="list-inline">
                            <li class="bold">версия</li>
                            @if (versions != null)
                            {
                                foreach (int ver in versions)
                                {
                                    <li><a class="btn @(Request.QueryString["cv"] != null && Request.QueryString["cv"].Equals(ver.ToString()) ? "btn-danger selected" : "btn-primary")" href="@Url.Action("Index", new {claimId = claim.Id, cv = ver})">@ver</a></li>
                                }
                            }
                        </ul>
                    </div>
                }*@
            @*Позиции*@<span>
                Список позиций
                <span class="label label-default">всего&nbsp;<span class="big" id="positionCountLabel">@Model.PositionsCount</span></span>
                <span class="label label-info">из них рассчитано&nbsp;<span class="big" id="positionCalculateCountLabel">@Model.CalculatePositionsCount</span></span>
            </span>
            @if (Model.StateCanAddPositions)
            {
                <div>
                    <table class="table table-bordered small">
                        <thead>
                            <tr class="bg-primary">
                                <th><input type="checkbox" id="newCheckAll" /></th>
                                <th style="width: 10%">Каталожный номер</th>
                                <th style="width: 30%">Наименование</th>
                                <th style="width: 5%">Количество</th>
                                <th style="width: 10%">Единица</th>
                                <th style="width: 10%">Продакт/Снабженец</th>
                                <th style="width: 25%">Комментарий</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td class="min-width">

                                    @*<span type="editPositionPanel" style="display: none;">
                                            <button type='button' modetype='editButton' class='btn btn-link btn-lg' data-toggle='tooltip' title='изменить'><i class='fa fa-edit'></i></button>
                                            <span type="editPositionActionPanel" style="display: none;">
                                                <button type='button' modetype='editPositionButtonOK' class='btn btn-primary btn-lg' data-toggle='tooltip' title='изменить'><i class='fa fa-save'></i></button><br />
                                                <button type='button' modetype='editPositionButtonCancel' class='btn btn-default btn-lg' data-toggle='tooltip' title='отмена'><i class='fa fa-undo'></i></button>
                                            </span>
                                        </span>*@
                                </td>
                                <td>
                                    <input type='text' id='newcatalogNumberValue' class="form-control input-sm" placeholder="Каталожный номер" />
                                </td>
                                <td>
                                    <textarea rows="3" class="form-control input-sm" id='newnameValue' placeholder="Наименование *"></textarea>
                                </td>
                                <td>
                                    <input type='text' id='newvalueValue' class="form-control input-sm" placeholder="Количество *" />
                                </td>
                                <td>
                                    @Html.DropDownList("units", PositionUnit.GetSelectionList(), "--выберите--", new { id = "newUnit", @class = "form-control input-sm" })
                                </td>
                                <td>
                                    @Html.DropDownList("prods", new SelectList(UserHelper.GetProductManagersSelectionList(), "Id", "ShortName"), "--выберите--", new { id = "newProd", @class = "form-control input-sm" })
                                </td>
                                <td>
                                    <textarea rows='3' id='newcommentValue' class="form-control input-sm" placeholder="Комментарий"></textarea>
                                </td>
                                <td class="min-width">
                                    @*<button type='button' modetype='addPositionButtonOK' class='btn btn-primary btn-lg' data-toggle='tooltip' title='сохранить'><i class='fa fa-save'></i></button><br />
                                        <button type='button' modetype='addPositionButtonCancel' class='btn btn-default btn-lg' data-toggle='tooltip' title='отмена'><i class='fa fa-undo'></i></button>
                                        <button type='button' modetype='deleteButton' class='btn btn-link btn-lg' data-toggle='tooltip' title='удалить' style="display: none;"><i class='fa fa-trash'></i></button>*@
                                    <a id='saveNew' class='btn btn-primary' data-toggle='tooltip' title='сохранить'><i class='fa fa-save'></i></a>
                                    <a id='Newcancel' class='btn btn-default' data-toggle='tooltip' title='отмена'><i class='fa fa-undo'></i></a>
                                </td>
                            </tr>
                        </tbody>
                        <tbody id="newPositionsContainer"></tbody>
                    </table>
                </div>
            }
            @*<P>
                    <h4 id="rejectHead">
                        Отклонено продактом/снабженцем
                    </h4>
                    <div id="rejectedPositions">

                    </div>
                </P>*@
        </div>

        <div id="deadLineCorrectorBox" class="modal fade">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title">Срок для расчета не может быть менее 2 суток</h4>
                    </div>
                    <div class="modal-body">

                        @*<label class="col-sm-9 control-label required-mark">Срок сдачи расчета</label>*@

                        <input type="text" id="deadlineCorrector" style="cursor: pointer;" class="form-control datepicker-btn" placeholder="Срок сдачи расчета" />
                        <span id="deadlineLabelCorrector" style="" class="form-control"></span>
                        <small>не менее 2 рабочих дней</small>

                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Отмена</button>
                        <button id="butDeadLineCorrect" type="button" class="btn btn-primary">Продолжить</button>
                    </div>
                </div>
            </div>
        </div>
        <div id="rejectPositionCommentBox" class="modal fade">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title">Комментарий к отклонению</h4>
                    </div>
                    <div class="modal-body">
                        <textarea id="rejectPositionComment" class="form-control" rows="7" placeholder="Комментарий"></textarea>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Отмена</button>
                        <button id="butRejectPositionOk" type="button" class="btn btn-primary">Продолжить</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section scripts
{
    <script type="text/javascript">


        $(function() {
            $('#saveNew').click(function() {
                var CatalogNumber = $('#newcatalogNumberValue').val();
                var Name = $('#newnameValue').val();
                var Value = $('#newvalueValue').val();
                var Unit = $('#newUnit').val();
                var UnitName = $('#newUnit :selected').text();
                var ProductManagerId = $('#newProd').val();
                var ProductManagerName = $('#newProd :selected').text();
                var Comment = $('#newcommentValue').val();
                var error = '';
                if (!Name)error = error + 'поле Наименование';
                if (Value == null || Value == '')error = error + '\rполе Количество';
                if (!Unit)error = error + '\rполе Единица';
                if (!ProductManagerId)error = error + '\rполе Снабженец';

                if (error.length > 0) {
                    error = error + '\rнекорректно заполнены! Отмена сохранения!';
                    alert(error);
                    return;
                }
                showSpinnerAppendAndDisable(this);
                $.ajax({
                    url: '@Url.Action("AddPosition")',
                    method: 'POST',
                    data: { IdClaim: @Model.Id, ProductManagerName: ProductManagerName, UnitName: UnitName, CatalogNumber: CatalogNumber, Name: Name, Value: Value, Unit: Unit, ProductManagerId: ProductManagerId, Comment: Comment },
                    success: function(html) {
                        $('#newPositionsContainer').append(html);
                        fillCount();
                        clearNewFields();
                        initNewPositionBtns();
                        hideSpinnerAndEnabled();
                    },
                    error: function() {
                        alert('Ошибка при сохранении позиции');
                        hideSpinnerAndEnabled();
                    }
                });
            });
            $('#butDeleteSelected').click(function() {
                if (!confirm('Вы действиетльно хотите удалить выбранные позиции?'))return;
                showSpinnerAppendAndDisable(this);
                deleteNewSelectedPositions();
            });
            $('#Newcancel').click(function() {
                clearNewFields();
            });
            $('#newCheckAll').click(function() {
                $('[name="newCheckbox"]').prop('checked', $(this).is(':checked'));
            });
            $('#butSetClaimOnWork').click(setClaimOnWork);
            loadHistory();
            //loadrejectedPositions();
            loadNewPositions();
        });

        $('#txtUploadFile').on('change', function(e) {
            var files = e.target.files;
            if (files.length > 0) {
                if (window.FormData !== undefined) {
                    var data = new FormData();
                    for (var x = 0; x < files.length; x++) {
                        data.append("file" + x, files[x]);
                    }
                    showSpinnerAppendAndDisable($(this).parent('.btn'));
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("UploadFileForm")?claimId=' + @Model.Id,
                        contentType: false,
                        processData: false,
                        data: data,
                        success: function(data) {
                            if (data.error) {
                                if (confirm(data.message.replace(/<br\s*[\/]?>/gi, "\n"))) {
                                    savePoistions(data.positions);
                                } else {
                                }
                            } else {
                                savePoistions(data.positions);
                                alert(data.message.replace(/<br\s*[\/]?>/gi, "\n"));
                            }
                            hideSpinnerAndEnabled();
                        },
                        error: function(xhr, status, p3, p4) {
                            var err = "Error " + " " + status + " " + p3 + " " + p4;
                            if (xhr.responseText && xhr.responseText[0] == "{")
                                err = JSON.parse(xhr.responseText).Message;
                            console.log(err);
                            hideSpinnerAndEnabled();
                        }
                    });
                } else {
                    alert("This browser doesn't support HTML5 file uploads!");
                }
            }
        });

        function setClaimOnWork() {
            showSpinnerAppendAndDisable(this);
            $.ajax({
                url: '@Url.Action("SetClaimOnWork")',
                method:'POST',
                data: {id:@Model.Id, cv:@Request.QueryString["cv"]},
                success:function() {
                    Location.reload();
                    hideSpinnerAndEnabled();
                },
                error:function() {
                    alert('Ошибка при переводе заявки в работу!');
                    hideSpinnerAndEnabled();
                }
            });
        }

        function fillCount() {
            var count = $('[name="newpos"]').length;
            $('#positionCountLabel').text(count);
        }

        function deleteNewSelectedPositions() {

            var selectedRows = $('[name="newCheckbox"]:checked');

            if (selectedRows.length > 0) {
                var ids = [];
                for (var i = 0; i < selectedRows.length; i++) {
                    ids.push($(selectedRows[i]).val());
                }
                $.ajax({url: '@Url.Action("DeleteClaimPositions")',
                    method: 'POST',
                    contentType: 'application/json; charset = utf-8 ',
                    dataType: "json",
                    data: JSON.stringify(ids),
                    success: function(data)
                    {
                        if (data.IsComplete) {
                            for (var i = 0; i < ids.length; i++) {
                                $('#newpos-' + ids[i]).remove();
                            }
                        } else {
                            alert("Не удалось удалить все записи из БД");
                        }
                        hideSpinnerAndEnabled();
                        fillCount();
                    }
                });
            } else {
                alert('Ничего не выбрано!');
                hideSpinnerAndEnabled();
                return;
            }
        }

        function savePoistions(positions) {
            $.ajax({
                url: '@Url.Action("AddClaimPositions")',
                method: 'POST',
                contentType: "application/json",
                data: JSON.stringify({ modelList: positions }),
                success: function(data) {

                    if (data.IsComplete) {
                        loadNewPositions();
                        //alert('Загрузка прошла успешно!');
                    } else {
                        alert('Что-то пошло не так при сохранении. Попробуйте обновить страницу.');
                    }
                }
            });
        }

        function clearNewFields() {
            $('#newcatalogNumberValue').val('');
            $('#newnameValue').val('');
            $('#newvalueValue').val('');
            $('#newUnit').val('');
            $('#newProd').val('');
            $('#newcommentValue').val('');
        }

        function loadNewPositions() {
            showSpinner($('#newPositionsContainer'));
            $.ajax({
                url: '@Url.Action("GetNewPositions")',
                method: 'GET',
                data: { claimId: @Model.Id, cv: @Request.QueryString["cv"] },
                success: function(html) {
                    $('#newPositionsContainer').html(html);
                    fillCount();
                    initNewPositionBtns();

                    hideSpinner($('#newPositionsContainer'));
                },
                error: function() {
                    alert('Ошибка загрузки позиций!');
                    hideSpinner($('#newPositionsContainer'));
                }
            });
        }

        function initNewPositionBtns() {
            $('[name="newEdit"]').click(function() {
                var id = $(this).attr('cid');
                $.ajax({
                    url: '@Url.Action("GetNewPositionEdit")',
                    method: 'POST',
                    data: { id: id },
                    success: function(html) {
                        $('#newpos-' + id).replaceWith(html);
                        initNewPositionBtns();
                    },
                    error:function() {
                        alert('Ошибка при загрузке формы редактирования');
                    }
                });
            });

            $('[name="newEditCancel"]').click(function() {
                var id = $(this).attr('cid');
                $.ajax({
                    url: '@Url.Action("GetNewPosition")',
                    method: 'POST',
                    data: { id: id },
                    success: function(html) {
                        $('#newpos-' + id).replaceWith(html);
                        initNewPositionBtns();
                    },
                    error: function() {
                        alert('Ошибка при сохранении позиции');
                        hideSpinnerAndEnabled();
                    }
                });
            });

            $('[name="newEditSave"]').click(function() {
                var id = $(this).attr('cid');
                var $row = $('#newpos-' + id);
                var CatalogNumber = $('[name="newcatalogNumberValue"]', $row).val();
                var Name = $('[name="newnameValue"]', $row).val();
                var Value = $('[name="newvalueValue"]', $row).val();
                var Unit = $('[name="newUnit"]', $row).val();
                var UnitName = $('[name="newUnit"]', $row).find(':selected').text();
                var ProductManagerId = $('[name="newProd"]', $row).val();
                var ProductManagerName = $('[name="newProd"]', $row).find(':selected').text();
                var Comment = $('[name="newcommentValue"]', $row).val();
                var error = '';
                if (!Name)error = error + 'поле Наименование';
                if (Value == null || Value == '')error = error + '\rполе Количество';
                if (!Unit)error = error + '\rполе Единица';
                if (!ProductManagerId)error = error + '\rполе Снабженец';

                if (error.length > 0) {
                    error = error + '\rнекорректно заполнены! Отмена сохранения!';
                    alert(error);
                    return;
                }
                showSpinnerAppendAndDisable(this);
                $.ajax({
                    url: '@Url.Action("EditClaimPosition")',
                    method: 'POST',
                    data: { Id:id, IdClaim: @Model.Id, ProductManagerName: ProductManagerName, UnitName: UnitName, CatalogNumber: CatalogNumber, Name: Name, Value: Value, Unit: Unit, ProductManagerId: ProductManagerId, Comment: Comment },
                    success: function(html) {
                        $('#newpos-' + id).replaceWith(html);
                        initNewPositionBtns();
                        hideSpinnerAndEnabled();
                    },
                    error: function() {
                        alert('Ошибка при сохранении позиции');
                        hideSpinnerAndEnabled();
                    }
                });
            });
            $('[name="newDelete"]').click(function() {
                if (!confirm('Вы действиетльно хотите удалить выбранные позицию?'))return;
                var id = $(this).attr('cid');
                var ids = [];
                ids.push(id);
                $.ajax({url: '@Url.Action("DeleteClaimPositions")',
                    method: 'POST',
                    contentType: 'application/json;charset=utf-8',
                    dataType: "json",
                    data: JSON.stringify(ids),
                    success: function(data)
                    {
                        if (data.IsComplete) {
                            for (var i = 0; i < ids.length; i++) {
                                $('#newpos-' + ids[i]).remove();
                            }
                        } else {
                            alert("Не удалось удалить все записи из БД");
                        }
                        hideSpinnerAndEnabled();
                        fillCount();
                    }
                });
            });
        }

        function loadrejectedPositions() {
            $.ajax({
                url: '@Url.Action("GetClaimRejectedPositions")',
                method: 'POST',
                data: { id: @Model.Id, version: @Request.QueryString["cv"] },
                success: function(html) {
                    $('#rejectedPositions').html(html);
                },
                error: function() {
                    alert('Ошибка загрузки отклоненных позиций!');
                }
            });
        }

        function loadHistory() {
            showSpinner($('#claimStatusHistoryContainer'));
            $.ajax({
                url: '@Url.Action("GetClaimHistory")',
                method: 'POST',
                data: { id: @Model.Id, full: false },
                success: function(html) {
                    $('#claimStatusHistoryContainer').html(html);
                    hideSpinner($('#claimStatusHistoryContainer'));
                },
                error: function() {
                    alert('Ошибка загрузки истории!');
                    hideSpinner($('#claimStatusHistoryContainer'));
                }
            });
        }
    </script>
}