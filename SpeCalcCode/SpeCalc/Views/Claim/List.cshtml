@using System.Web.Script.Serialization
@using DocumentFormat.OpenXml.Office2013.PowerPoint.Roaming
@using DocumentFormat.OpenXml.Wordprocessing
@using SpeCalc.Models
@using SpeCalcDataAccessLayer.Models
@model SpeCalc.Models.ListViewModels

@{
    ViewBag.Title = "Список заявок";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var canEdit = (bool)ViewBag.CanEdit;
    var canCalc = (bool)ViewBag.CanCalc;
    var claimStatus = Model.Filter.ClaimStatus ?? new List<int>();
   // var serializer = new JavaScriptSerializer();
}

<div class="panel panel-default" id="filter">
    <div id="filterPanel" class="panel-collapse collapse">
        <div class="panel-body">
            <div class="form-horizontal val-form" role="form">
                <div class="form-group">
                    <label class="col-sm-2 control-label">ID</label>
                    <div class="col-sm-10">
                        <input type="text" id="filterIdClaim" class="form-control input-sm" value='@(Model.Filter.IdClaim == 0 ? "" : Model.Filter.IdClaim.ToString())' />
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-2 control-label">№ конкурса</label>
                    <div class="col-sm-10">
                        <input type="text" id="filterTenderNumber" class="form-control input-sm" value='@Model.Filter.TenderNumber'/>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-2 control-label">Заказчик</label>
                    <div class="col-sm-10">
                        <input type="text" id="filterCustomer" class="form-control input-sm" value='@Model.Filter.Customer' />
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-2 control-label">Статус заявки</label>
                    <div class="col-sm-10" id="filterClaimStatusPanel">
                        <input type="checkbox" id="filterClaimStatusCreated" value="1" @(claimStatus.Contains(1) ? "checked" : "") /><span>Создано</span>
                        <input type="checkbox" id="filterClaimStatusTransmissed" value="2" @(claimStatus.Contains(2) ? "checked" : "") /><span>Передано</span>
                        <input type="checkbox" id="filterClaimStatusInWork" value="3" @(claimStatus.Contains(3) ? "checked" : "") /><span>В работе</span>
                        <input type="checkbox" id="filterClaimStatusStopped" value="4" @(claimStatus.Contains(4) ? "checked" : "") /><span>Приостановлено</span>
                        <input type="checkbox" id="filterClaimStatusCancelled" value="5" @(claimStatus.Contains(5) ? "checked" : "") /><span>Отменено</span>
                        <input type="checkbox" id="filterClaimStatusSameCalculated" value="6" @(claimStatus.Contains(6) ? "checked" : "") /><span>Частично расчитано</span>
                        <input type="checkbox" id="filterClaimStatusCalculated" value="7" @(claimStatus.Contains(7) ? "checked" : "") /><span>Расчитано</span>
                        <input type="checkbox" id="filterClaimStatusConfirmed" value="8" @(claimStatus.Contains(8) ? "checked" : "") /><span>Подтверждено</span>
                        <input type="checkbox" id="filterClaimStatusActualize" value="9" @(claimStatus.Contains(9) ? "checked" : "") /><span>Актуализация</span>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-2 control-label">Просрочено</label>
                    <div class="col-sm-10">
                        <div class="input-sm">
                            <input type="radio" name="filterClaimOverdue" id="filterClaimOverdueNot" value="not" @(Model.Filter.Overdie == null ? "checked" : "")> все
                            <input type="radio" name="filterClaimOverdue" id="filterClaimOverdueYes" value="yes" @(Model.Filter.Overdie == true ? "checked" : "")>> да
                            <input type="radio" name="filterClaimOverdue" id="filterClaimOverdueNo" value="no" @(Model.Filter.Overdie == false ? "checked" : "")>> нет
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-2 control-label">Тип сделки</label>
                    <div class="col-sm-10">
                        <select size="1" id="filterDealType" class="form-control input-sm">
                            <option selected value="">---Все---</option>
                            @foreach (var dealType in ListViewModels.GetDealTypesList())
                            {
                                <Option @(dealType.Id == Model.Filter.DealTypeId ? "selected" : "") value=@dealType.Id>
                                    @dealType.Value
                                </Option>
                            }
                        </select>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-2 control-label">Менеджер</label>
                    <div class="col-sm-10">
                        <select size="1" id="filterManagers" class="form-control input-sm">
                            <option selected value=@string.Join(",",Model.Managers.Select(m => m.Id))>---Все---</option>
                            @foreach (var manager in Model.Managers)
                            {
                                <Option @(manager.Id==Model.Filter.IdManager ? "selected" : "") value=@manager.Id>
                                    @manager.ShortName
                                </Option>
                            }
                        </select>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-2 control-label">Снабженец</label>
                    <div class="col-sm-10">
                        <select size="1" id="filterProductManagers" class="form-control input-sm">
                            <option selected value=@string.Join(",",Model.ProductManagers.Select(m => m.Id))>---Все---</option>
                            @foreach (var product in Model.ProductManagers)
                            {
                                <Option @(product.Id==Model.Filter.IdProductManager ? "selected" : "") value=@product.Id>
                                    @product.ShortName
                                </Option>
                            }
                        </select>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-2 control-label">Срок сдачи</label>
                    <div class="col-sm-2">
                        <input type="text" id="filterTenderStartFrom" style="cursor: pointer;" class="form-control datepicker-btn input-sm" value='@Model.Filter.TenderStartFrom' placeholder="от"/>
                    </div>
                    <div class="col-sm-2">
                        <input type="text" id="filterTenderStartTo" style="cursor: pointer;" class="form-control datepicker-btn input-sm" value='@Model.Filter.TenderStartTo' placeholder="до"/>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-2 control-label">Показать записей</label>
                    <div class="col-sm-10">
                        <input type="text" id="filterRowCount" class="form-control input-sm" value='@Model.Filter.RowCount' />
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-offset-2 col-sm-10">
                        <button type="button" id="acceptFilter" class="btn btn-primary"><i class="fa fa-search"></i>&nbsp;найти</button>
                        <button type="button" id="clearFilter" class="btn btn-default"><i class="fa fa-repeat"></i>&nbsp;очистить</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="filterHead" class="panel-heading">
        <div class="panel-title collapsed" data-toggle="collapse" data-target="#filterPanel">
            <a class="title"><i class="fa fa-filter"></i></a>
        </div>
    </div>
</div>

<h5>
    <span class="label label-default">
        Всего записей:
        <span id="claimCountLabel">@Model.TotalClaimsCount</span>
    </span>
    &nbsp;
    <span class="label label-info">
        из них показано:
        <span id="showCountLabel">@Model.Claims.Count</span>
    </span>
</h5>
<table class="table table-bordered small">
    <thead>
    <tr class="bg-primary">
        @if (canCalc && canEdit)
        {
            <th class="max-width">&nbsp;&nbsp;</th>
        }
        <th>ID</th>
        <th>№ конкурса</th>
        <th class="width-300">Заказчик</th>
        <th>Бюджет запроса</th>
        <th>Менеджер<br/>Автор</th>
        <th>Статус заявки</th>
        <th>Создано</th>
        <th>Срок сдачи</th>
        <th class="text-nowrap"><table class="table table-bordered prod-manager-table"><tr class="text-primary"><td>Снабженец</td><td class="bg-default ligth num">запрос</td><td class="bg-success ligth num">расчет</td><td class="bg-info ligth num">позиций</td></tr></table></th>
        <th style="width: 150px;">
            Тип сделки
        </th>
        @if (canEdit)
        {<th>&nbsp;</th>}
    </tr>
    </thead>
    <tbody id="claimTable">
    @foreach (var claim in Model.Claims)
    {
        var url = canEdit
            ? Url.Action("Index", "Claim", new {claimId = claim.Id})
            : canCalc && claim.ProductManagers.Count>0
                ? Url.Action("Index", "Calc", new {claimId = claim.Id})
                : "#";


        <tr class="row-claim-item" url="@url">

            @if (canCalc && canEdit)
            {
                <td>
                    <a href=@Url.Action("Index", "Claim", new {claimId = claim.Id}) class='btn btn-link btn-lg' data-toggle='tooltip' title='изменить'><i class='fa fa-edit'></i></a>
                    @if (claim.ProductManagers.Count > 0)
                    {
                        <a href=@Url.Action("Index", "Calc", new {claimId = claim.Id}) class='btn btn-link btn-lg' data-toggle='tooltip' title='изменить'><i class='fa fa-calculator'></i></a>
                    }
                </td>
            }
            <td>@claim.Id</td>
            <td>@claim.TenderNumber</td>
            <td>@claim.Customer<br/>ИНН @claim.CustomerInn</td>
            <td>@claim.Sum</td>
            <td>
                <div class='text-nowrap'>@claim.Manager.ShortName</div>
                <div class='text-nowrap'>@claim.Author.ShortName</div>
            </td>
            <td>@ListViewModels.GetClaimStatus(claim.ClaimStatus)</td>
            <td>@claim.RecordDateString.Split(' ')[0]</td>
            <td>@claim.ClaimDeadlineString</td>
            <td>
                <table class='table table-bordered prod-manager-table'>
                    <tr>
                        <th>Всего</th>
                        <td class='bg-default ligth text-right num'>@claim.PositionsCount</td>
                        <td class='bg-success ligth text-right num'>@claim.CalculatePositionsCount</td>
                        <td class='bg-info ligth text-right num'>@claim.CalculatesCount</td>
                    </tr>
                    @foreach (var product in claim.ProductManagers)
                    {
                        <tr>
                            <td>@product.ShortName</td>
                            <td class='bg-default ligth text-right num'>@product.PositionsCount</td>
                            <td class='bg-success ligth text-right num'>@product.CalculatePositionsCount</td>
                            <td class='bg-info light text-right num'>@product.CalculatesCount</td>
                        </tr>
                    }
                </table>
            </td>
            <td>@ListViewModels.GetClaimDealType(claim.DealType)</td>
            <td>
                @if (canEdit && claim.ClaimStatus == 1)
                {
                    <button id=delbtn claimId="@claim.Id" type='button' class='btn btn-link btn-lg' data-toggle='tooltip' title='удалить'>
                        <i class='fa fa-trash'></i>
                    </button>
                }
            </td>
        </tr>
    }
    </tbody>
</table>
<p>
    <blockquote class="bg-warning">
        Чтобы увидеть больше информации измените фильт (сверху)!
    </blockquote>
</p>

<link href="~/Content/bootstrap-datepicker3.css" rel="stylesheet" />
<script type="text/javascript">



    $(init);

    function init() {
        $("#filterTenderStartFrom").datepicker({
            format: "dd.mm.yyyy",
            autoclose: true,
            todayBtn: "linked",
            language: "ru"
        });
        $("#filterTenderStartTo").datepicker({
            format: "dd.mm.yyyy",
            autoclose: true,
            todayBtn: "linked",
            language: "ru"
        });
        $("#filterTenderStartFrom").add("#filterTenderStartTo").change(function(e) {
            var datepicker = $(e.currentTarget);
            var dt = datepicker.datepicker("getDate");
            var dateString = getDateString(dt);
            datepicker.val(dateString);
        });
        $("#clearDates").click(function() {
            $("#filterTenderStartFrom").val("");
            $("#filterTenderStartTo").val("");
        });
        $("#acceptFilter").click(function() {
            var object = getFilterObj();
            if (!object.isValid) {
                alert(object.message)
            } else {
                var filter = JSON.stringify(object.model);
                document.location.replace("/Claim/List?filterString=" + filter);
            }

        });
        $("#clearFilter").click(function() {
            document.location.replace("/Claim/List?filterString=");
        });
        $('[url]').click(function () {
            if ($(this).attr("url") === "#") {
                alert("Нет позиций для расчета");
            }
            window.open($(this).attr("url"));
        });
        $('[id="delbtn"]').click(function (e) {
            var id = parseInt($(this).attr("claimId"));
            if (confirm("Вы действительно хотите удалить заявку №" + id)) {
                var url = "@Url.Action("DeleteClaim","Claim")";
                var btn = $(this);
                $.getJSON(url, { id: id }, function (data) {
                    if (data.IsComplete) {
                        btn.remove();
                        location.reload();
                    }

                });
                
            }; e.stopPropagation();
        });
        $('[class="btn btn-link btn-lg"]').click(function(e) {
            e.stopPropagation();
        });
    }
    function getFilterObj() {

        //получение настроек фильтра из формы и проверка валидности введенных значений
        var obj = { isValid: true, message: "", model: null };
        var model = {};
        var message = "";
        var rowCount = $("#filterRowCount").val().trim();
        rowCount = rowCount.replace(",", ".");
        if (rowCount != "") {
            if (!isNaN(rowCount)) {
                if (rowCount.indexOf(".") == -1) {
                    rowCount = Number(rowCount);
                    if (rowCount < 0) {
                        obj.isValid = false;
                        obj.message = "Количество строк не может быть отрицательным";
                    }
                    if (rowCount > 0) {
                        model.RowCount = rowCount;
                    }
                } else {
                    obj.isValid = false;
                    obj.message = "Значение '" + rowCount + "' в поле Количество строк не является целым числом";
                }
            } else {
                obj.isValid = false;
                obj.message = "Значение '" + rowCount + "' в поле Количество строк не является целым числом";
            }
        }
        var claimId = $("#filterIdClaim").val().trim();
        if (claimId != "") {
            if (!isNaN(claimId)) {
                if (claimId.indexOf(".") == -1) {
                    claimId = Number(claimId);
                    if (claimId < 0) {
                        message = "№ Заявки не может быть отрицательным";
                        if (obj.message.trim() != "") {
                            message = "\r" + message;
                        }
                        obj.isValid = false;
                        obj.message = message;
                    }
                    if (claimId > 0) {
                        model.IdClaim = claimId;
                    }
                } else {
                    message = "Значение '" + claimId + "' в поле № Заявки не является целым числом";
                    if (obj.message.trim() != "") {
                        message = "\r" + message;
                    }
                    obj.isValid = false;
                    obj.message = message;
                }
            } else {
                message = "Значение '" + claimId + "' в поле № Заявки не является целым числом";
                if (obj.message.trim() != "") {
                    message = "\r" + message;
                }
                obj.isValid = false;
                obj.message = message;
            }
        }
        var tenderNumber = $("#filterTenderNumber").val().trim();
        if (tenderNumber != "") {
            model.TenderNumber = tenderNumber;
        }
        var customer = $("#filterCustomer").val().trim();
        if (customer !== "") {
            model.Customer = customer;
        }
        var status = [];
        var filterStatusControls = ["filterClaimStatusCreated", "filterClaimStatusTransmissed", "filterClaimStatusInWork", "filterClaimStatusStopped", "filterClaimStatusCancelled", "filterClaimStatusSameCalculated", "filterClaimStatusCalculated", "filterClaimStatusConfirmed", "filterClaimStatusActualize"];
        var controlsLength = filterStatusControls.length;
        for (var i = 0; i < controlsLength; i++) {
            var control = $("#" + filterStatusControls[i]);
            if (control.get(0).checked) {
                status.push(Number(control.val()));
            }
        }
        model.ClaimStatus = status;
        var dealType = $(":selected", $("#filterDealType"));
        if (dealType.text() !== "---Все---") {
            model.DealTypeId = Number(dealType.val().trim());
        }
        var manager = $(":selected", $("#filterManagers"));
        if (manager.text() != "---Все---") {
            model.IdManager = manager.val().trim();
        }
        var productManager = $(":selected", $("#filterProductManagers"));
        if (productManager.text() != "---Все---") {
            model.IdProductManager = productManager.val().trim();
        }
        var tenderStartFrom = $("#filterTenderStartFrom").val().trim();
        if (tenderStartFrom != "") {
            model.TenderStartFrom = tenderStartFrom;
        }
        var tenderStartTo = $("#filterTenderStartTo").val().trim();
        if (tenderStartTo != "") {
            model.TenderStartTo = tenderStartTo;
        }
        if (tenderStartFrom != "" && tenderStartTo != "") {
            var dateFrom = $("#filterTenderStartFrom").datepicker("getDate").getTime();
            var dateTo = $("#filterTenderStartTo").datepicker("getDate").getTime();
            if (dateTo < dateFrom) {
                message = "Дата 'срок сдачи с' должна быть не позже даты 'срок сдачи по'";
                if (obj.message.trim() != "") {
                    message = "\r" + message;
                }
                obj.isValid = false;
                obj.message = message;
            }
        }
        var overdie = null;
        if ($("#filterClaimOverdueYes").get(0).checked) {
            overdie = true;
        }
        if ($("#filterClaimOverdueNo").get(0).checked) {
            overdie = false;
        }
        if (overdie != null) {
            model.Overdie = overdie;
        }
        if (obj.isValid) {
            obj.model = model;
        }
        return obj;
    }


</script>

